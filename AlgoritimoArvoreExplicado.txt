estrutura No
	info
	esq
	dir
	pai
	altura

raiz

inserir info
	no := raiz

	se raiz = null
		raiz := novo No
						info := info
						esq := null
						dir := null
						pai := null
						altura := 1
	senão
		enquanto verdadeiro
			se info < no info
				se no esq = null
					nov := novo No
									info := info
									esq := null
									dir := null
									pai := no
									altura := 1
					pare
				no = no esq
				continue

			se info > no info
				se no dir = null
					nov := novo No
									info := info
									esq := null
									dir := null
									pai := no
									altura := 1
					pare
				no = no dir
				continue

			retorne

	nop = no

	enquanto no não= null
		no altura := maior de altura no esq e no dir + 1

		fator de balanceamento = no esq altura - no dir altura

		se fator de balanceamento > 1
			se info < no esq info
				rotacione no para a direita
			senão
				rotacione no esq para esquerda
				rotacione no para direita

			continue

		senão se fator de balanceamento < -1
			se info > no dir info
				rotacione no para esquerda
			senão
				rotacione no dir para direita
				rotacione no para esquerda

			continue

		nop := no
		no := no pai

	raiz := nop




remover info

		se raiz = NULL
			retornar 0;
        
		se valor < raizInfo
		inteiro res
		
			se res = remover(raizEsquerda, valor)) == 1
				Alturaraiz = max(AlturaRaizEsquerda, AlturaRaizDireita) + 1;
				befao = FatorBalanceamentoRaiz;
				se befao < -1
				
					se AlturaRaizDireitaEsquerda <= AlturaRaizDireitaDireita
						rotacionarEsquerda;
					senão
					
						rotacionarDireitaEsquerda
					
				
			

		

		se valor > raizInfo
		
			se res = remover(raizDireita, valor == 1) 
				AlturaRaiz = max(AlturaRaizEsquerda, AlturaRaizDireita) + 1;
				befao = FatorBalanceamento(raiz);
				se befao > 1
				
					se (AlturaRaizEsquerdaDireita <= AlturaRaizEsquerdaEsquerda)
						rotacionarEsquerda
					senão
					
						rotacionarDireitaEsquerda
					
				
			
		

		se RaizInfo = valor
		{
			se (RaizEsquerda é Nulo ou RaizDireita é Nulo)
			
				old = raiz;
				se RaizEsquerda não é Nulo
					raiz = RaizEsquerda;
				senão
				
					pai = raiz->p;
					raiz = raiz->r;
					se (raiz != NULL)
						AlturaRaiz= max(AlturaEsquerda, AlturaDireita) + 1;
						paiRaiz = pai;
											
				
					
				freeNode(old, raiz);
				
			
			senão
			
				*no1 = raizDireita;
				*no2 = raizDireitaEsquerda;
				enquanto  no2NaoNulo 
					no1 = no2;
					no2 = no2Esquerda;
				
				temp = no1;
				InfoRaiz = InfoTemp;
				remover(RaizDireita,InfoTemp);
				int befao = FatorBalanceamento(raiz);
				se befao > 1
				
					se AlturaRaizEsquerdaDireita <= AlturaRaizEsquerdaEsquerda
						rotacionarDireita
					senão					
						rotacionarEsquerdaDireita
					
				
				AlturaRaiz = max(AlturaEsquerda, AlturaDireita) + 1;
			
			retornar 1
		
		retornar res
	